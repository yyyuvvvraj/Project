{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\OneDrive\\\\Desktop\\\\Internship Projects\\\\Project 1\\\\excel-analytics-platform\\\\frontend\\\\src\\\\pages\\\\DataView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataView = () => {\n  _s();\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/data\").then(res => setRows(res.data)).catch(err => console.error(err));\n  }, []);\n  const exportToExcel = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/upload/export\", {\n        responseType: \"blob\"\n      });\n      const blob = new Blob([response.data], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      });\n      saveAs(blob, \"ExportedData.xlsx\");\n    } catch (error) {\n      console.error(\"Export failed\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Uploaded Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToExcel,\n      className: \"bg-green-500 text-white px-4 py-2 rounded mb-4\",\n      children: \"Export to Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: rows[0] && Object.keys(rows[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border-b text-left\",\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"border-b\",\n          children: Object.values(row).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4\",\n            children: String(value)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(DataView, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n_c = DataView;\nexport default DataView;\nvar _c;\n$RefreshReg$(_c, \"DataView\");","map":{"version":3,"names":["React","useEffect","useState","axios","saveAs","jsxDEV","_jsxDEV","DataView","_s","rows","setRows","get","then","res","data","catch","err","console","error","exportToExcel","response","responseType","blob","Blob","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","keys","map","key","row","index","values","value","idx","String","_c","$RefreshReg$"],"sources":["C:/Users/Amit/OneDrive/Desktop/Internship Projects/Project 1/excel-analytics-platform/frontend/src/pages/DataView.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nconst DataView = () => {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/api/data\")\r\n      .then((res) => setRows(res.data))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  const exportToExcel = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/upload/export\", {\r\n        responseType: \"blob\",\r\n      });\r\n      const blob = new Blob([response.data], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n      saveAs(blob, \"ExportedData.xlsx\");\r\n    } catch (error) {\r\n      console.error(\"Export failed\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Uploaded Data</h2>\r\n\r\n      <button\r\n        onClick={exportToExcel}\r\n        className=\"bg-green-500 text-white px-4 py-2 rounded mb-4\"\r\n      >\r\n        Export to Excel\r\n      </button>\r\n\r\n      <table className=\"min-w-full bg-white\">\r\n        <thead>\r\n          <tr>\r\n            {rows[0] && Object.keys(rows[0]).map((key) => (\r\n              <th key={key} className=\"py-2 px-4 border-b text-left\">{key}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rows.map((row, index) => (\r\n            <tr key={index} className=\"border-b\">\r\n              {Object.values(row).map((value, idx) => (\r\n                <td key={idx} className=\"py-2 px-4\">{String(value)}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}